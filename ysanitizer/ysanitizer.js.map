{"version":3,"file":"ysanitizer.js","mappings":"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","sources":["webpack:///./src/pairlists.ts","webpack:///./src/pairs.ts","webpack:///./src/sanitizer.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/main.ts"],"sourcesContent":["/**\r\n* @file\r\n* @license\r\n* Copyright (c) 2022 Yor-Jihons\r\n* Released under the MIT license.\r\n* https://github.com/Yor-Jihons/ysanitizer/blob/main/ysanitizer/LICENSE\r\n*/\r\n\r\nimport * as Pairs from \"./pairs\";\r\n\r\n\r\n/**\r\n* The class to manage the objects of the clas Pair.\r\n*/\r\nexport class PairList{\r\n    /**\r\n    * The array of the class Pair.\r\n    */\r\n    private _pairs: Pairs.Pair[];\r\n\r\n    /**\r\n    * Constructor.\r\n    */\r\n    constructor(){\r\n        this._pairs = new Array();\r\n    }\r\n\r\n    /**\r\n    * Add the object to manage.\r\n    * @param pair The object of the class Pair.\r\n    */\r\n    add( pair: Pairs.Pair ): void{\r\n        this._pairs[ this._pairs.length ] = pair;\r\n    }\r\n\r\n    /**\r\n    * Get the length of the array which managed.\r\n    * @returns Th length of the array which managed.\r\n    */\r\n    length(): number{\r\n        return this._pairs.length;\r\n    }\r\n\r\n    /**\r\n    * Get the length of the array which managed.\r\n    * @returns Th length of the array which managed.\r\n    */\r\n\r\n    /**\r\n    * Get the object of the class Pair which places in the array.\r\n    * @param index \r\n    * @returns The object of the class Pair which places in the array.\r\n    */\r\n    at( index:number ): Pairs.Pair{\r\n        return this._pairs[index];\r\n    }\r\n};\r\n\r\n/**\r\n* Create the object of the class PairList.\r\n* @returns the object of the class PairList.\r\n*/\r\nexport function createPairList(){\r\n    let list = new PairList();\r\n    list.add( new Pairs.Pair( \"&\", \"&amp;\" ) );\r\n    list.add( new Pairs.Pair( \"<\", \"&lt;\" ) );\r\n    list.add( new Pairs.Pair( \">\", \"&gt;\" ) );\r\n    list.add( new Pairs.Pair( '\"', \"&quot;\" ) );\r\n    list.add( new Pairs.Pair( \"'\", \"&#039;\" ) );\r\nreturn list;\r\n};\r\n\r\n","/**\r\n* @file\r\n* @license\r\n* Copyright (c) 2022 Yor-Jihons\r\n* Released under the MIT license.\r\n* https://github.com/Yor-Jihons/ysanitizer/blob/main/ysanitizer/LICENSE\r\n*/\r\n\r\n\r\n/**\r\n* The class to make pair, with a key and a value.\r\n*/\r\nexport class Pair{\r\n    /**\r\n    * The key which is a string before coverted.\r\n    */\r\n    private _key:string;\r\n\r\n    /**\r\n    * The value which is a string after coverted.\r\n    */\r\n    private _value:string;\r\n    constructor( key:string, value:string ){\r\n        this._key   = key;\r\n        this._value = value;\r\n    }\r\n\r\n    /**\r\n    * Get the key which is a string before coverted.\r\n    * @returns the key which is a string before coverted.\r\n    */\r\n    getKey(): string{\r\n        return this._key;\r\n    }\r\n\r\n    /**\r\n    * Get the value which is a string after coverted.\r\n    * @returns the value which is a string after coverted.\r\n    */\r\n    getValue(): string{\r\n        return this._value;\r\n    }\r\n};\r\n","/**\r\n* @file\r\n* @license\r\n* Copyright (c) 2022 Yor-Jihons\r\n* Released under the MIT license.\r\n* https://github.com/Yor-Jihons/ysanitizer/blob/main/ysanitizer/LICENSE\r\n*/\r\n\r\nimport * as Pairs from \"./pairs\";\r\nimport * as PairLists from \"./pairlists\";\r\n\r\n\r\n/**\r\n* Sanitize the string.\r\n* @param target The string you want to sanitize.\r\n* @returns The string sanitized.\r\n*/\r\nexport function sanitize( target:string ): string{\r\n    let pairList:PairLists.PairList = PairLists.createPairList();\r\n\r\n    let ret = target;\r\n\r\n    for( let i:number = 0; i < pairList.length(); i++ ){\r\n        let pair:Pairs.Pair = pairList.at( i );\r\n        ret = ret.split( pair.getKey() ).join( pair.getValue() );\r\n    }\r\nreturn ret;\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n* @file\r\n* @license\r\n* Copyright (c) 2022 Yor-Jihons\r\n* Released under the MIT license.\r\n* https://github.com/Yor-Jihons/ysanitizer/blob/main/ysanitizer/LICENSE\r\n*/\r\n\r\n\r\nimport * as Sanitizers from \"./sanitizer\";\r\n\r\n\r\n// ---------------------------------------------------\r\n// HTMLからも使えるようにする\r\n\r\n\r\n// 1. The inteface definition so that the users can use.\r\ninterface YSanitizers{\r\n    sanitize( target:string ): string;\r\n}\r\n\r\n// 2. Add (1) into the global.window. (window.[...] = ... の左辺)\r\ndeclare global {\r\n    interface Window {\r\n        YSanitizers: YSanitizers;\r\n    }\r\n}\r\n\r\nconst YSanitizers: YSanitizers = (() =>{\r\n    return {\r\n        /**\r\n        * Sanitize the string.\r\n        * @param target The string you want to sanitize.\r\n        * @returns The string sanitized.\r\n        */\r\n        sanitize: ( target:string ): string => {\r\n            return Sanitizers.sanitize( target );\r\n        }\r\n    };\r\n})();\r\n\r\n// 4. Add the intefaces.\r\nwindow.YSanitizers = YSanitizers;\r\n\r\n\r\n// ---------------------------------------------------\r\n"],"names":[],"sourceRoot":""}